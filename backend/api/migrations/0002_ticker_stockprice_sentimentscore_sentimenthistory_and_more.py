# Generated by Django 5.0.2 on 2025-10-19 23:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=10, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('exchange', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ticker',
                'verbose_name_plural': 'Tickers',
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='StockPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, help_text='Current stock price', max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('open_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('high_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('low_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('change_percent', models.FloatField(blank=True, help_text='Percentage change', null=True)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_prices', to='api.ticker')),
            ],
            options={
                'verbose_name': 'Stock Price',
                'verbose_name_plural': 'Stock Prices',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['ticker', '-timestamp'], name='api_stockpr_ticker__708e8c_idx')],
            },
        ),
        migrations.CreateModel(
            name='SentimentScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Sentiment score from -100 to 100')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('articles_analyzed', models.IntegerField(default=0)),
                ('cached_articles', models.IntegerField(default=0)),
                ('new_articles', models.IntegerField(default=0)),
                ('sentiment_label', models.CharField(blank=True, choices=[('STRONGLY_BULLISH', 'Strongly Bullish'), ('BULLISH', 'Bullish'), ('NEUTRAL', 'Neutral'), ('BEARISH', 'Bearish'), ('STRONGLY_BEARISH', 'Strongly Bearish')], max_length=20)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_scores', to='api.ticker')),
            ],
            options={
                'verbose_name': 'Sentiment Score',
                'verbose_name_plural': 'Sentiment Scores',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['ticker', '-timestamp'], name='api_sentime_ticker__172bd4_idx')],
            },
        ),
        migrations.CreateModel(
            name='SentimentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('avg_sentiment', models.FloatField(help_text='Average sentiment score for the day')),
                ('min_sentiment', models.FloatField(help_text='Minimum sentiment score')),
                ('max_sentiment', models.FloatField(help_text='Maximum sentiment score')),
                ('total_articles', models.IntegerField(default=0)),
                ('closing_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_change_percent', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_history', to='api.ticker')),
            ],
            options={
                'verbose_name': 'Sentiment History',
                'verbose_name_plural': 'Sentiment History',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['ticker', '-date'], name='api_sentime_ticker__062954_idx')],
                'unique_together': {('ticker', 'date')},
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.TextField()),
                ('summary', models.TextField(blank=True)),
                ('source', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, max_length=500)),
                ('published_at', models.DateTimeField(db_index=True)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
                ('article_hash', models.CharField(db_index=True, max_length=32, unique=True)),
                ('base_sentiment', models.FloatField(help_text='Base sentiment from -1 to 1')),
                ('surprise_factor', models.FloatField(default=1.0)),
                ('novelty_score', models.FloatField(default=1.0)),
                ('source_credibility', models.FloatField(default=0.5)),
                ('recency_weight', models.FloatField(default=1.0)),
                ('article_score', models.FloatField(help_text='Calculated article score')),
                ('weighted_contribution', models.FloatField(help_text='Contribution to composite score')),
                ('is_analyzed', models.BooleanField(default=False)),
                ('sentiment_cached', models.BooleanField(default=False)),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_articles', to='api.ticker')),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
                'ordering': ['-published_at'],
                'indexes': [models.Index(fields=['ticker', '-published_at'], name='api_newsart_ticker__0747bf_idx'), models.Index(fields=['article_hash'], name='api_newsart_article_a5c6f2_idx')],
            },
        ),
    ]
